/**
 * @file G_dataTypes.H
 * @author Badiry Achraf (achraf.badiry@edu.bme.hu)
 * @brief 
 * @version 0.1
 * @date 2024-02-09
 * 
 * @copyright GNU General Public License 2024
 * 
 */
#ifndef header
#define header

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

/**
 * @brief A structure that stores the data generated by sloving the coupled ODE's
 * 
 */
typedef struct data
{
    double population;
    double time;
    char type;
    struct data* next;
}data;

/**
 * @brief Variables to create, maintain and delete the lined list of data
 * 
 */
extern data *start,
            *head,
            *end;

/**
 * @brief Variables to store the value of the coefficients
 * 
 */
extern double *alpha, 
                *beta,
                *delta,
                *gamma;

/**
 * @brief Function to implement the Runge-Kutta method for solving coupled ODE's
 * 
 * @param H0 initial hare population
 * @param F0 initial fox population
 * @param days number of days to track the populations
 * @param delta_t the time step for (= precision of) the Runge-Kutta method
 */
void CalculateChange(int H0, int F0, int days, float delta_t);

/**
 * @brief Function to allocate each piece of data and add it to memory
 * 
 * @param population population number at a given time
 * @param time time
 * @param type hare or fox
 */
void AddElement(double population, double time, char type);

/**
 * @brief Function that takes the data in the linked list, stores it in a file and print it using GNUplot
 * 
 * @param coordinates pointer to the 1st element of the linked list
 */
void Plot (data* coordinates);

/**
 * @brief Function to delete the linked list after the data is stored in the file
 * 
 * @param head pointer to the 1st element of the linked list
 */
void DeleteLL(data* head);

/**
 * @brief Function that returns the value of the ODE of 'Dx/Dt', or in this case, the change in hare population
 * 
 * @param H number of hares
 * @param F number of foxes
 * @return double 
 */
double DxDt (double H, double F);

/**
 * @brief Function that returns the value of the ODE of 'Dy/Dt', or in this case, the change in fox population
 * 
 * @param H number of hares
 * @param F number of foxes
 * @return double 
 */
double DyDt (double H, double F);

#endif